{"version":3,"sources":["components/Navbar.js","components/FileUploader.js","components/Modal.js","components/App.js","components/MerkleViz.js","components/Main.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","href","target","rel","id","this","props","account","Component","FileUploader","hiddenFileInput","React","useRef","Fragment","onClick","event","current","click","type","ref","onChange","fileUploaded","files","handleInputFile","style","display","Modal","_ref","handleClose","show","children","showHideClassName","float","paddingRight","margin","defaultStyles","jsonObjectVideoURLs","MerkleTree","require","SHA256","json_url","window","location","CenteredTree","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","translate","x","outerWidth","y","outerHeight","service_id","json_data","undefined","tree","json_tree","tree_string","treeUtil","parseJSON","then","setState","catch","err","console","error","_this2","results","tasks","toString","width","height","tc","treeContainer","Main","InputTasks","InputRoot","InputFileLoaded","ShowModalArray","name","isActive","bind","assertThisInitialized","jsonObject","JSON","parse","result","root","inputFile","reader","FileReader","readAsText","onload","onReaderLoad","index","tmp","onSubmit","preventDefault","serviceName","value","price","web3","utils","toWei","servicePrice","time","serviceTime","createService","input","placeholder","required","scope","services","map","service","key","fromWei","timeInMinutes","owner","purchased","purchaseService","removeService","components_Modal","MerkleViz","components_FileUploader","assign","request","url","App","serviceCount","loading","response","body","statusCode","loadWeb3","loadBlockchainData","ethereum","Web3","enable","currentProvider","alert","eth","getAccounts","accounts","net","getId","networkid","networkData","Marketplace","networks","marketplace","Contract","abi","address","methods","i","concat","toConsumableArray","send","from","on","receipt","reload","data","_this3","_this4","videoURLs","push","components_Navbar","role","components_Main","lib_default","controls","Boolean","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2ace16d4.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Navbar extends Component {\n\n  render(){\n    return (\n    <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n      <a\n        className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n        href=\"https://twitter.com/iridia_ulb\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\">\n        IRIDIA Swarm Marketplace\n      </a>\n\n    <ul className=\"navbar-nav px-3\">\n      <li className=\"nav-item text-nowrap d-none d-none d-sm-none d-sm-block\">\n        <small className=\"text-white\"><span id=\"account\">{this.props.account}</span></small>\n      </li>\n    </ul>\n    </nav>\n  );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nconst FileUploader = props => {\n\nconst hiddenFileInput = React.useRef(null);\n\n  const handleClick = event => {\n    hiddenFileInput.current.click();\n  };\n  const handleChange = event => {\n    const fileUploaded = event.target.files[0];\n    props.handleInputFile(fileUploaded);\n  };\n  return (\n    <>\n      <button className=\"btn btn-primary\" onClick={handleClick}>\n        Upload\n      </button>\n      <input type=\"file\"\n             ref={hiddenFileInput}\n             onChange={handleChange}\n             style={{display:'none'}}\n      />\n    </>\n  );\n};\n\nexport default FileUploader;\n","import React, { Component } from 'react';\n\nconst Modal = ({ handleClose, show, children }) => {\n  const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\n  return (\n    <div className={showHideClassName}>\n      <section className=\"modal-main\">\n        <button className=\"btn btn-primary\" style={{float : 'right', paddingRight : '10px', margin: '10px 10px 10px 0', display:'inline-block'}} onClick={handleClose}>Close</button>\n        {children}\n      </section>\n    </div>\n  );\n};\n\nModal.defaultStyles = {}\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport Web3 from 'web3'\nimport './App.css';\nimport Marketplace from '../abis/Marketplace.json'\nimport Navbar from './Navbar.js'\nimport Main from './Main.js'\nimport ReactPlayer from 'react-player'\n\nconst request = require('request');\nvar url = window.location.href + '/media.json';\nvar jsonObjectVideoURLs;\n\nclass App extends Component {\n\n  async componentWillMount(){\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadWeb3(){\n        // Modern dapp browsers...\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum);\n            await window.ethereum.enable();\n        }\n        else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider);\n        }\n        else {\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n        }\n  }\n\n  async loadBlockchainData(){\n    // Get object\n    const web3 = window.web3\n\n    // Load account\n    const accounts = await web3.eth.getAccounts()\n    this.setState({account: accounts[0]})\n    const networkid = await web3.eth.net.getId()\n    const networkData = Marketplace.networks[networkid]\n    if (networkData){\n      const marketplace = web3.eth.Contract(Marketplace.abi, networkData.address)\n      this.setState({marketplace})\n      const serviceCount = await marketplace.methods.serviceCount().call()\n      this.setState({serviceCount})\n      // Load services\n      for (var i =1; i<=serviceCount-1; i++){\n        const service = await marketplace.methods.services(i).call()\n        this.setState({\n          services: [...this.state.services, service]\n        })\n      }\n      this.setState({loading:false})\n    }\n    else {\n        window.alert('Marketplace contract not deployed to detected network');\n    }\n  }\n\n  constructor (props)\n  {\n    super(props)\n    this.state = {\n      account: '',\n      serviceCount: 0,\n      services: [],\n      loading: true\n    }\n    this.createService = this.createService.bind(this)\n    this.purchaseService = this.purchaseService.bind(this)\n    this.removeService = this.removeService.bind(this)\n\n    // Request the video URLs\n    request(url, function (error, response, body) {\n      if (!error && response.statusCode == 200) {\n         jsonObjectVideoURLs = JSON.parse(body);\n      }\n    });\n  }\n\n  createService(name,price, time){\n    this.setState({loading: true})\n    this.state.marketplace.methods.createService(name,price, time).send({from: this.state.account}).on('confirmation', (receipt) => {\n      this.setState({loading: false})\n      window.location.reload()\n    })\n  }\n\n  purchaseService(id, price, data, root){\n    this.setState({loading: true})\n    this.state.marketplace.methods.purchaseService(id, data, root).send({from: this.state.account, value: price}).on('confirmation', (receipt) => {\n      this.setState({loading: false})\n      window.location.reload()\n    })\n  }\n\n  removeService(id){\n    this.setState({loading: true})\n    this.state.marketplace.methods.removeService(id).send({from: this.state.account}).on('confirmation', (receipt) => {\n      this.setState({loading: false})\n      window.location.reload()\n    })\n  }\n\n  render() {\n\n    var videoURLs = [];\n    for(var i in jsonObjectVideoURLs)\n    {\n        videoURLs.push(jsonObjectVideoURLs[i][\"embedUrl\"]);\n    }\n\n    return (\n      <div>\n        <Navbar account={this.state.account}/>\n        <div className=\"container-fluid mt-5\">\n          <div className=\"left\">\n            <main role=\"main\" className=\"col-lg-12 d-flex\">\n               {this.state.loading\n                 ? <div id=\"loader\" className=\"text-center\"><p className=\"text-center\">Loading ...</p></div>\n                 : <Main\n                  account = {this.state.account}\n                  services = {this.state.services}\n                  purchaseService = {this.purchaseService}\n                  createService ={this.createService}\n                  removeService = {this.removeService}/>}\n            </main>\n           </div>\n\n           <div className=\"right\">\n            <div className='player-wrapper'>\n               <ReactPlayer\n                  className='react-player'\n                  controls = 'true'\n                  url={videoURLs}\n                  width='100%'\n                  height='100%'\n                  />\n            </div>\n           </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport { Tree, treeUtil } from 'react-d3-tree';\nconst { MerkleTree } = require('merkletreejs')\nconst SHA256 = require('crypto-js/sha256')\nvar json_url = window.location.href + '/results.json';\n\nclass CenteredTree extends Component {\n  constructor(props) {\n   super(props);\n   this.state = {\n     translate: {x: window.outerWidth/2.5, y: window.outerHeight/4},\n     service_id : this.props.service_id,\n     json_data: undefined,\n     tree: undefined,\n     json_tree: [],\n     tree_string: ''\n   };\n\n  // Parse the info obtained from the results url\n  treeUtil.parseJSON(json_url).then((json_data) => {this.setState({ json_data })}).catch((err) => console.error(err));\n};\n\n  render() {\n    // get the tasks and rebuild merkletree\n    if (typeof this.state.json_data !== 'undefined')\n    {\n        var results = this.state.json_data[0][this.state.service_id].results;\n        var tasks = this.state.json_data[0][this.state.service_id].tasks;\n        this.state.tree = new MerkleTree(tasks, SHA256)\n        this.state.tree_string = this.state.tree.toString()\n    }\n      return (\n\n        <div id=\"treeWrapper\" style={{width: '75em', height: '50em'}} ref={tc => (this.treeContainer = tc)}>\n          <pre>\n            {this.state.tree_string}\n          </pre>\n        </div>\n    );\n  }\n}\n\nexport default CenteredTree;\n","import React, { Component } from 'react';\nimport FileUploader from './FileUploader.js'\nimport Modal from './Modal.js'\nimport CenteredTree from './MerkleViz.js'\n\nclass Main extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      InputTasks: [],\n      InputRoot: '',\n      InputFileLoaded: false,\n      ShowModalArray: [ { name: \"first\", isActive: false },\n                        { name: \"second\", isActive: false },\n                        { name: \"third\", isActive: false }]\n    };\n      this.handleInputFile = this.handleInputFile.bind(this)\n      this.onClick = this.onClick.bind(this)\n  }\n\n  onReaderLoad(event){\n    var jsonObject = JSON.parse(event.target.result)\n    this.setState({InputTasks : jsonObject.tasks})\n    this.setState({InputRoot : jsonObject.root})\n    this.setState({InputFileLoaded : true})\n  }\n\nhandleInputFile(inputFile) {\n    var reader = new FileReader();\n    reader.readAsText(inputFile);\n    reader.onload = this.onReaderLoad.bind(this);\n  }\n\n  onClick(index) {\n    let tmp = this.state.ShowModalArray;\n    tmp[index].isActive = !tmp[index].isActive;\n    this.setState({ ShowModalArray: tmp });\n}\n\n\n  render() {\n    return (\n      <div id=\"content\">\n      { this.props.account == '0x531E40a3e0327f6c5760b2896A20dcA6cCBf7844'\n        ?\n        <>\n        <h1>Add service</h1>\n        <form onSubmit={(event) => {\n          event.preventDefault()\n          const name = this.serviceName.value\n          const price = window.web3.utils.toWei(this.servicePrice.value.toString(), 'Ether')\n          const time = this.serviceTime.value\n          this.props.createService(name, price, time)\n        }}>\n          <div className=\"form-group mr-sm-2\">\n            <input\n              id=\"serviceName\"\n              type=\"text\"\n              ref={(input) => { this.serviceName = input }}\n              className=\"form-control\"\n              placeholder=\"Number of Robots\"\n              required />\n          </div>\n          <div className=\"form-group mr-sm-2\">\n            <input\n              id=\"servicePrice\"\n              type=\"text\"\n              ref={(input) => { this.servicePrice = input }}\n              className=\"form-control\"\n              placeholder=\"Service Price\"\n              required />\n          </div>\n          <div className=\"form-group mr-sm-2\">\n            <input\n              id=\"serviceTime\"\n              type=\"text\"\n              ref={(input) => { this.serviceTime = input }}\n              className=\"form-control\"\n              placeholder=\"Service Time (Mins)\"\n              required />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">Add Service</button>\n        </form>\n        </>\n        : null\n       }\n\n        <p>&nbsp;</p>\n        <h2>Buy service</h2>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Number of Robots</th>\n              <th scope=\"col\">Price</th>\n              <th scope=\"col\">Time (Mins)</th>\n              <th scope=\"col\">Owner</th>\n              <th scope=\"col\"></th>\n              <th scope=\"col\"></th>\n              <th scope=\"col\">Input data</th>\n            </tr>\n          </thead>\n          <tbody id=\"serviceList\">\n            { this.props.services.map((service, key) => {\n              return(\n                <tr key={key}>\n                  <th scope=\"row\">{service.id.toString()}</th>\n                  <td>{service.name}</td>\n                  <td>{window.web3.utils.fromWei(service.price.toString(), 'Ether')} Eth</td>\n                  <td>{service.timeInMinutes.toString()}</td>\n                  <td>{service.owner}</td>\n\n                  <td>\n                    {\n                      !service.purchased && service.owner !== this.props.account && this.state.InputFileLoaded\n                      ? <button className=\"btn btn-primary\"\n                          name={service.id}\n                          value={service.price}\n                          onClick={(event) => {\n                            this.props.purchaseService(event.target.name,\n                                                       event.target.value,\n                                                       this.state.InputTasks,\n                                                       this.state.InputRoot)\n                          }}\n                        >\n                          Buy\n                        </button>\n                      : null\n                    }\n                    </td>\n\n                    <td>\n                      { !service.purchased && service.owner === this.props.account\n                        ? <button className=\"btn btn-primary\"\n                            name={service.id}\n                            onClick={(event) => {\n                              this.props.removeService(event.target.name)\n                            }}\n                          >\n                            Remove\n                          </button>\n                        : null\n                      }\n                      </td>\n                      <td>\n                      { !service.purchased && service.owner !== this.props.account\n                        ?\n                        <FileUploader {...this.props}\n                        handleInputFile = {this.handleInputFile} />\n                        : service.purchased ?\n                        <>\n                        <button className=\"btn btn-primary\" onClick={() => this.onClick(key)}>\n                         Results\n                        </button>\n\n                            <Modal show={this.state.ShowModalArray[key].isActive} handleClose={() => this.onClick(key)}>\n                              <CenteredTree service_id={key}/>\n                            </Modal>\n                        </>\n                          : null\n                      }\n                      </td>\n                </tr>\n              )\n            })\n          }\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}