{"version":3,"sources":["components/Navbar.js","components/FileUploader.js","components/Splash.js","components/Modal.js","components/App.js","components/MerkleViz.js","components/Main.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","href","target","rel","id","this","props","account","Component","FileUploader","hiddenFileInput","React","useRef","Fragment","onClick","event","current","click","type","ref","onChange","fileUploaded","files","handleInputFile","style","display","Modal","_ref","handleClose","show","children","showHideClassName","float","paddingRight","margin","defaultStyles","jsonObjectVideoURLs","MerkleTree","require","SHA256","json_url","window","location","CenteredTree","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","translate","x","outerWidth","y","outerHeight","service_id","json_data","undefined","tree","json_tree","tree_string","treeUtil","parseJSON","then","setState","catch","err","console","error","_this2","results","tasks","results_str","i","length","action","sensor","toString","width","height","tc","treeContainer","Main","InputTasks","InputRoot","InputFileLoaded","ShowModalArray","name","isActive","EtherScanUrlArray","bind","assertThisInitialized","jsonObject","JSON","parse","result","root","inputFile","reader","FileReader","readAsText","onload","onReaderLoad","index","tmp","onSubmit","preventDefault","serviceName","value","price","web3","utils","toWei","servicePrice","time","serviceTime","createService","input","placeholder","required","scope","services","map","service","key","fromWei","timeInMinutes","owner","purchased","purchaseService","removeService","components_Modal","MerkleViz","components_FileUploader","assign","request","url","App","serviceCount","loading","splash","response","body","statusCode","setTimeout","loadWeb3","loadBlockchainData","ethereum","Web3","enable","currentProvider","alert","eth","getAccounts","accounts","net","getId","networkid","networkData","Marketplace","networks","marketplace","Contract","abi","address","methods","concat","toConsumableArray","_this3","send","from","on","receipt","reload","data","_this4","_this5","videoURLs","push","components_Navbar","role","components_Main","lib_default","playbackRate","controls","Boolean","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.986403ab.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Navbar extends Component {\n\n  render(){\n    return (\n    <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n      <a\n        className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n        href=\"https://twitter.com/iridia_ulb\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\">\n        IRIDIA Swarm Marketplace\n      </a>\n\n    <ul className=\"navbar-nav px-3\">\n      <li className=\"nav-item text-nowrap d-none d-none d-sm-none d-sm-block\">\n        <small className=\"text-white\"><span id=\"account\">{this.props.account}</span></small>\n      </li>\n    </ul>\n    </nav>\n  );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nconst FileUploader = props => {\n\nconst hiddenFileInput = React.useRef(null);\n\n  const handleClick = event => {\n    hiddenFileInput.current.click();\n  };\n  const handleChange = event => {\n    const fileUploaded = event.target.files[0];\n    props.handleInputFile(fileUploaded);\n  };\n  return (\n    <>\n      <button className=\"btn btn-primary\" onClick={handleClick}>\n        Upload\n      </button>\n      <input type=\"file\"\n             ref={hiddenFileInput}\n             onChange={handleChange}\n             style={{display:'none'}}\n      />\n    </>\n  );\n};\n\nexport default FileUploader;\n","import React, { Component } from 'react';\n\nclass Splash extends Component {\n\n  render(){\n    return (\n            <div>\n\n            \n\n\n\n            </div>\n    );\n  }\n}\n\nexport default Splash;\n","import React, { Component } from 'react';\n\nconst Modal = ({ handleClose, show, children }) => {\n  const showHideClassName = show ? \"modal display-block\" : \"modal display-none\";\n  return (\n    <div className={showHideClassName}>\n      <section className=\"modal-main\">\n        <button className=\"btn btn-primary\" style={{float : 'right', paddingRight : '10px', margin: '10px 10px 10px 0', display:'inline-block'}} onClick={handleClose}>Close</button>\n        {children}\n      </section>\n    </div>\n  );\n};\n\nModal.defaultStyles = {}\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport Web3 from 'web3'\nimport './App.css';\nimport Marketplace from '../abis/Marketplace.json'\nimport Navbar from './Navbar.js'\nimport Splash from './Splash.js'\nimport Main from './Main.js'\nimport ReactPlayer from 'react-player'\n\nconst request = require('request');\nvar url = window.location.href + '/media.json';\nvar jsonObjectVideoURLs;\n\nclass App extends Component {\n\ncomponentDidMount() {\n    setTimeout(() => {\n      this.setState({splash: false});\n    }, 1000); // 1000ms = 1 second\n  }\n\n  async componentWillMount(){\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadWeb3(){\n        // Modern dapp browsers...\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum);\n            await window.ethereum.enable();\n        }\n        else if (window.web3) {\n            window.web3 = new Web3(window.web3.currentProvider);\n        }\n        else {\n            window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n        }\n  }\n\n  async loadBlockchainData(){\n    // Get object\n    const web3 = window.web3\n\n    // Load account\n    const accounts = await web3.eth.getAccounts()\n    this.setState({account: accounts[0]})\n    const networkid = await web3.eth.net.getId()\n    const networkData = Marketplace.networks[networkid]\n    if (networkData){\n      const marketplace = web3.eth.Contract(Marketplace.abi, networkData.address)\n      this.setState({marketplace})\n      const serviceCount = await marketplace.methods.serviceCount().call()\n      this.setState({serviceCount})\n      // Load services\n      for (var i =1; i<=serviceCount-1; i++){\n        const service = await marketplace.methods.services(i).call()\n        this.setState({\n          services: [...this.state.services, service]\n        })\n      }\n      this.setState({loading:false})\n    }\n    else {\n        window.alert('Marketplace contract not deployed to detected network');\n    }\n  }\n\n  constructor (props)\n  {\n    super(props)\n    this.state = {\n      account: '',\n      serviceCount: 0,\n      services: [],\n      loading: true,\n      splash: true\n    }\n    this.createService = this.createService.bind(this)\n    this.purchaseService = this.purchaseService.bind(this)\n    this.removeService = this.removeService.bind(this)\n\n    // Request the video URLs\n    request(url, function (error, response, body) {\n      if (!error && response.statusCode == 200) {\n         jsonObjectVideoURLs = JSON.parse(body);\n      }\n    });\n  }\n\n  createService(name,price, time){\n    this.setState({loading: true})\n    this.state.marketplace.methods.createService(name,price, time).send({from: this.state.account}).on('confirmation', (receipt) => {\n      this.setState({loading: false})\n      window.location.reload()\n    })\n  }\n\n  purchaseService(id, price, data, root){\n    this.setState({loading: true})\n    this.state.marketplace.methods.purchaseService(id, data, root).send({from: this.state.account, value: price}).on('confirmation', (receipt) => {\n      this.setState({loading: false})\n      window.location.reload()\n    })\n  }\n\n  removeService(id){\n    this.setState({loading: true})\n    this.state.marketplace.methods.removeService(id).send({from: this.state.account}).on('confirmation', (receipt) => {\n      this.setState({loading: false})\n      window.location.reload()\n    })\n  }\n\n  render() {\n\n    var videoURLs = [];\n    for(var i in jsonObjectVideoURLs)\n    {\n        videoURLs.push(jsonObjectVideoURLs[i][\"embedUrl\"]);\n    }\n\n    // if (this.state.splash) {\n    //   return <div><Splash/></div>\n    // }\n\n    return (\n      <div>\n        <Navbar account={this.state.account}/>\n        <div className=\"container-fluid mt-5\">\n          <div className=\"left\">\n            <main role=\"main\" className=\"col-lg-12 d-flex\">\n               {this.state.loading\n                 ? <div id=\"loader\" className=\"text-center\"><p className=\"text-center\">Loading ...</p></div>\n                 : <Main\n                  account = {this.state.account}\n                  services = {this.state.services}\n                  purchaseService = {this.purchaseService}\n                  createService ={this.createService}\n                  removeService = {this.removeService}/>}\n            </main>\n           </div>\n\n           <div className=\"right\">\n            <div className='player-wrapper'>\n               <ReactPlayer\n                  className='react-player'\n                  playbackRate = '2'\n                  controls = 'true'\n                  url={videoURLs}\n                  width='100%'\n                  height='100%'\n                  />\n            </div>\n           </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport { Tree, treeUtil } from 'react-d3-tree';\nconst { MerkleTree } = require('merkletreejs')\nconst SHA256 = require('crypto-js/sha256')\nvar json_url = window.location.href + '/results.json';\n\nclass CenteredTree extends Component {\n  constructor(props) {\n   super(props);\n   this.state = {\n     translate: {x: window.outerWidth/2.5, y: window.outerHeight/4},\n     service_id : this.props.service_id,\n     json_data: undefined,\n     tree: undefined,\n     json_tree: [],\n     tree_string: ''\n   };\n\n  // Parse the info obtained from the results url\n  treeUtil.parseJSON(json_url).then((json_data) => {this.setState({ json_data })}).catch((err) => console.error(err));\n};\n\n  render() {\n    // get the tasks and rebuild merkletree\n    if (typeof this.state.json_data !== 'undefined')\n    {\n        var results = this.state.json_data[0][this.state.service_id].results;\n        var tasks = this.state.json_data[0][this.state.service_id].tasks;\n        var results_str = '';\n        for(var i = 0; i < results.length; i+=2)\n        {\n            var action = results[i];\n            var sensor = results[i+1];\n            results_str += 'Task' + [i/2] + ':' + tasks[i/2] + ' -> ' + 'H(' + action + ',' + sensor + ')' + '\\n';\n        }\n\n\n        this.state.tree = new MerkleTree(tasks, SHA256)\n        this.state.tree_string = this.state.tree.toString()\n    }\n      return (\n\n        <div id=\"treeWrapper\" style={{width: '75em', height: '50em'}} ref={tc => (this.treeContainer = tc)}>\n          <pre>\n            {this.state.tree_string}\n          </pre>\n          <h3><u>Results:</u></h3>\n          <pre>\n          {results_str}\n          </pre>\n        </div>\n    );\n  }\n}\n\nexport default CenteredTree;\n","import React, { Component } from 'react';\nimport FileUploader from './FileUploader.js'\nimport Modal from './Modal.js'\nimport CenteredTree from './MerkleViz.js'\n\nclass Main extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      InputTasks: [],\n      InputRoot: '',\n      InputFileLoaded: false,\n      ShowModalArray: [ { name: \"first\", isActive: false },\n                        { name: \"second\", isActive: false },\n                        { name: \"third\", isActive: false }],\n      EtherScanUrlArray: ['https://rinkeby.etherscan.io/tx/0x4f2f4b0b40ebfc5677d6967244cabe79388d2ffbb20811e1025a66bca3314ed4',\n                          'https://rinkeby.etherscan.io/tx/0xe554770fe2635f94b0e88dee11959e9734ffd3e9646366745c47ab7b00d46940',\n                          'https://rinkeby.etherscan.io/tx/0x0f8cc94b341b4114cb01627b2b2c96d6529278999c60854153219329b10efe72']\n    };\n      this.handleInputFile = this.handleInputFile.bind(this)\n      this.onClick = this.onClick.bind(this)\n  }\n\n  onReaderLoad(event){\n    var jsonObject = JSON.parse(event.target.result)\n    this.setState({InputTasks : jsonObject.tasks})\n    this.setState({InputRoot : jsonObject.root})\n    this.setState({InputFileLoaded : true})\n  }\n\nhandleInputFile(inputFile) {\n    var reader = new FileReader();\n    reader.readAsText(inputFile);\n    reader.onload = this.onReaderLoad.bind(this);\n  }\n\n  onClick(index) {\n    let tmp = this.state.ShowModalArray;\n    tmp[index].isActive = !tmp[index].isActive;\n    this.setState({ ShowModalArray: tmp });\n}\n\n\n  render() {\n    return (\n      <div id=\"content\">\n      { this.props.account == '0x531E40a3e0327f6c5760b2896A20dcA6cCBf7844'\n        ?\n        <>\n        <h1>Add service</h1>\n        <form onSubmit={(event) => {\n          event.preventDefault()\n          const name = this.serviceName.value\n          const price = window.web3.utils.toWei(this.servicePrice.value.toString(), 'Ether')\n          const time = this.serviceTime.value\n          this.props.createService(name, price, time)\n        }}>\n          <div className=\"form-group mr-sm-2\">\n            <input\n              id=\"serviceName\"\n              type=\"text\"\n              ref={(input) => { this.serviceName = input }}\n              className=\"form-control\"\n              placeholder=\"Number of Robots\"\n              required />\n          </div>\n          <div className=\"form-group mr-sm-2\">\n            <input\n              id=\"servicePrice\"\n              type=\"text\"\n              ref={(input) => { this.servicePrice = input }}\n              className=\"form-control\"\n              placeholder=\"Service Price\"\n              required />\n          </div>\n          <div className=\"form-group mr-sm-2\">\n            <input\n              id=\"serviceTime\"\n              type=\"text\"\n              ref={(input) => { this.serviceTime = input }}\n              className=\"form-control\"\n              placeholder=\"Service Time (Mins)\"\n              required />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">Add Service</button>\n        </form>\n        </>\n        : null\n       }\n\n        <p>&nbsp;</p>\n        <h2>Buy service</h2>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Number of Robots</th>\n              <th scope=\"col\">Price</th>\n              <th scope=\"col\">Time (Mins)</th>\n              <th scope=\"col\">Owner</th>\n              <th scope=\"col\"></th>\n              <th scope=\"col\"></th>\n              <th scope=\"col\">Input data</th>\n            </tr>\n          </thead>\n          <tbody id=\"serviceList\">\n            { this.props.services.map((service, key) => {\n              return(\n                <tr key={key}>\n                  <th scope=\"row\">{service.id.toString()}</th>\n                  <td>{service.name}</td>\n                  <td>{window.web3.utils.fromWei(service.price.toString(), 'Ether')} Eth</td>\n                  <td>{service.timeInMinutes.toString()}</td>\n                  <td><a target=\"_blank\"  href={this.state.EtherScanUrlArray[key]}>{service.owner}</a></td>\n\n                  <td>\n                    {\n                      !service.purchased && service.owner !== this.props.account && this.state.InputFileLoaded\n                      ? <button className=\"btn btn-primary\"\n                          name={service.id}\n                          value={service.price}\n                          onClick={(event) => {\n                            this.props.purchaseService(event.target.name,\n                                                       event.target.value,\n                                                       this.state.InputTasks,\n                                                       this.state.InputRoot)\n                          }}\n                        >\n                          Buy\n                        </button>\n                      : null\n                    }\n                    </td>\n\n                    <td>\n                      { !service.purchased && service.owner === this.props.account\n                        ? <button className=\"btn btn-primary\"\n                            name={service.id}\n                            onClick={(event) => {\n                              this.props.removeService(event.target.name)\n                            }}\n                          >\n                            Remove\n                          </button>\n                        : null\n                      }\n                      </td>\n                      <td>\n                      { !service.purchased && service.owner !== this.props.account\n                        ?\n                        <FileUploader {...this.props}\n                        handleInputFile = {this.handleInputFile} />\n                        : service.purchased ?\n                        <>\n                        <button className=\"btn btn-primary\" onClick={() => this.onClick(key)}>\n                         Results\n                        </button>\n\n                            <Modal show={this.state.ShowModalArray[key].isActive} handleClose={() => this.onClick(key)}>\n                              <CenteredTree service_id={key}/>\n                            </Modal>\n                        </>\n                          : null\n                      }\n                      </td>\n                </tr>\n              )\n            })\n          }\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}